#include <msp430.h>


#define CTR1 3000                                       //define counter1 (CTR1) a constant value significantly less than counter2 (CTR2)
                                                        // for distinct delay between the red and green LEDs; creates distinct blink

#define CTR2 30000

// led bit assignment

#define LED1 BIT0                                  // define BIT0 or 0x01 as BIT0 (Port 1, Pin 0 (P1.0)) and 0x70 as BIT 6 (P4.7)

#define LED2 BIT7


// return nothing
void main(void)

{





    //P1OUT ^= LED1;


int i,j; // initialization of variables which are responsible for the delay

WDTCTL = WDTPW + WDTHOLD; 

P1DIR |= LED1;
P4DIR |= LED2;

i=j=0;

for(;;)

{ 

// increases both variables such that they count until their condition is met
// prior to condition being met both if statements execute toggleable LEDS and loop indefinitely on and off due to being within nested,
// indefinite, For loop

  i++; 

  j++;

// check first counter, if end value reset and toggle led

  if (i>CTR1)

      { i=0; P1OUT^=LED1;}

// check 2nd counter, if end value reset and toggle led
  if (j>CTR2)

     { j=0; P4OUT^=LED2;}

} 



}

